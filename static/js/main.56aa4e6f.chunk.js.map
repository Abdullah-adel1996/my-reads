{"version":3,"sources":["BooksAPI.js","Components/book/Book.js","Components/shelf/Shelf.js","Components/pages/Home.js","Components/pages/Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","getAll","fetch","then","res","json","data","books","update","book","shelf","id","method","body","JSON","stringify","Book","event","target","value","this","props","updateHandler","className","style","backgroundImage","imageLinks","thumbnail","onChange","handleBookUpdate","disabled","title","authors","Component","Shelf","map","key","pageCount","caption","Home","state","arrayGrouping","filter","changeShelf","forEach","obj","ind","setState","bind","to","Search","query","updateQuery","trim","showingbooks","toLowerCase","includes","type","placeholder","App","path","exact","component","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56aa4e6f.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react';\r\n\r\nexport class Book extends Component {\r\n  \r\n\r\n    handleBookUpdate(event){\r\n\t\tconst shelf = event.target.value\r\n\t\tthis.props.updateHandler(this.props, shelf)\r\n    }\r\n\r\n    render() {\r\n   \r\n        return (\r\n            <li>\r\n        <div className=\"book\">\r\n            <div className= \"book-top\">\r\n                <div className=\"book-cover\" style={{\r\n                    backgroundImage : `url(\"${this.props.imageLinks.thumbnail}\")`\r\n                }}>\r\n                </div>\r\n                <div className=\"book-shelf-changer\">\r\n                    <select \r\n                    value = {this.props.shelf} \r\n                    onChange={(event)=> this. handleBookUpdate(event)}>\r\n                        <option value=\"move\" disabled>Move to...</option>\r\n                        <option value=\"currentlyReading\">Currently Reading</option>\r\n                        <option value=\"wantToRead\">Want to Read</option>\r\n                        <option value=\"read\">Read</option>\r\n                    </select>\r\n                            </div>\r\n            </div>\r\n            <div className=\"book-title\">\r\n                {this.props.title}\r\n             </div>\r\n            <div className=\"book-authors\">\r\n                {this.props.authors}\r\n            </div>\r\n        </div>\r\n        </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Book\r\n","import React, { Component } from 'react'\r\n\r\nimport Book from '../book/Book'\r\n\r\n\r\nexport class Shelf extends Component {\r\n\trender() {\r\n\t\tlet books = this.props.books.map((book) => (\r\n\t\t\t<Book key={book.pageCount} {...book} updateHandler={this.props.updateHandler}/>\r\n           \r\n        ))\r\n\t\treturn (\r\n\t\t\t<div className=\"bookshelf\">\r\n\t\t\t\t<h2 className=\"bookshelf-title\">{this.props.caption}</h2>\r\n\t\t\t\t\t<ul className=\"books-grid bookshelf-books\">\r\n                        \r\n\t\t\t\t\t\t{books}\r\n                        \r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Shelf\r\n","import React, { Component } from 'react';\r\nimport {Link } from 'react-router-dom'\r\nimport {getAll, update} from '../../BooksAPI';\r\nimport Shelf from '../shelf/Shelf'\r\n\r\n\r\n\r\nexport class Home extends Component {\r\n   \r\n    state= {\r\n        books : []\r\n    };\r\n  \r\n    \r\n    componentDidMount () {\r\n        getAll().then((data) => {\r\n            this.setState({books: data})\r\n           \r\n\t\t})\r\n    }\r\n      \r\n    arrayGrouping = (shelf) => {\r\n        return this.state.books.filter((book) => book.shelf === shelf)\r\n    }\r\n \r\n   // i wrote this\r\n\r\n    changeShelf = (book, shelf) => {\r\n            let books = this.state.books;\r\n            books.forEach((obj, ind) => {\r\n                if (obj.id === book.id){\r\n                    books[ind].shelf = shelf\r\n                }\r\n            })\r\n    this.setState({books : books}) \r\n   }\r\n   updateHandler(book, shelf){\r\n    this.changeShelf(book, shelf)\r\n    update(book, shelf).then()\r\n}\r\n \r\n\t\r\n   render() {\r\n        return (\r\n        <div>\r\n            <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n            </div>\r\n        <div className=\"list-books-content\">\r\n            <Shelf caption=\"Currently Reading\" books={this.arrayGrouping('currentlyReading') }\r\n           updateHandler={this.updateHandler.bind(this)}/>\r\n            <Shelf caption=\"Want to Read\" books={this.arrayGrouping('wantToRead')}\r\n          updateHandler={this.updateHandler.bind(this)} />\r\n            <Shelf caption=\"Read\" books={this.arrayGrouping('read')}\r\n         updateHandler={this.updateHandler.bind(this)} />\r\n        </div>\r\n        <div className=\"open-search\">\r\n               <Link\r\n                  to=\"/Search\"\r\n                ><button>Add a book</button></Link>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react';\r\nimport Book from '../book/Book';\r\nimport {Link} from 'react-router-dom';\r\nimport {getAll, update} from '../../BooksAPI';\r\n\r\nexport class Search extends Component {\r\n\r\n    state = {\r\n        query: '',\r\n        books: []\r\n    }\r\n  \r\n    componentDidMount () {\r\n        getAll().then((data) => {\r\n            this.setState({books: data})\r\n        })\r\n       \r\n    }\r\n  \r\n    updateQuery = (query) => {\r\n        this.setState(()=> ({\r\n            query: query.trim()\r\n        }))\r\n       \r\n    }\r\n\r\n    changeShelf = (book, shelf) => {\r\n        let books = this.state.books;\r\n        books.forEach((obj, ind) => {\r\n            if (obj.id === book.id){\r\n                books[ind].shelf = shelf\r\n            }\r\n        })\r\n            this.setState({books : books}) \r\n            }\r\n    updateHandler(book, shelf){\r\n    this.changeShelf(book, shelf)\r\n    update(book, shelf).then()\r\n    }\r\n    \r\n    render() {\r\n        \r\n        let showingbooks = this.state.query === '' ? null:\r\n         this.state.books.filter((book) => book.title.toLowerCase().includes(this.state.query.toLowerCase()))\r\n         .map((book) => (\r\n\t\t\t<Book key={book.id} {...book} updateHandler={(book,shelf)=> this.updateHandler(book,shelf)}/>))\r\n        return (\r\n            <div>\r\n              <div className=\"search-books-bar\">\r\n              <Link className=\"close-search\" to='/'>Close</Link>\r\n\t\t\t\t\t<div className=\"search-books-input-wrapper\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Search by title or author\"\r\n                            value= {this.state.query}\r\n                            onChange={(event) => this.updateQuery(event.target.value)}\r\n                             />\r\n\t\t\t\t\t</div>\r\n               </div>\r\n               <div className=\"search-books-results\">\r\n\t\t\t\t\t<ul className=\"books-grid\">\r\n                  {showingbooks}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './Components/pages/Home';\nimport Search from './Components/pages/Search';\nimport './App.css';\n\n\n\nexport class App extends Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n            <Route path=\"/\" exact component={Home} />    \n            <Route path=\"/Search\" component={Search} />\n          </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css'\n\n\nconst app = (\n\n        <HashRouter>\n            <App />\n        </HashRouter>\n  \n);\n\nReactDOM.render( app, document.getElementById( 'root' ) );\n\n\n\n\n"],"sourceRoot":""}